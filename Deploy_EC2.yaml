AWSTemplateFormatVersion: '2010-09-09'
Description: for new account

Parameters:
  EnvironmentName:
    Description: Choose env name that you need to create
    Type: String
    Default: "ApiProduction"
    AllowedValues:
    - "ApiProduction"
    - "PortalProduction"
    - "ApiStage"
    - "PortalStage"
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 Key
  InstancePort:
    Type: String
    Description: Listen Port
    Default: '80'
  InstanceType:
    Description: API EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge

Resources:
  AIProdASG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enble SSH access via port 22
      VpcId: !ImportValue ProductionVPC
      SecurityGroupIngress:
      - CidrIp: !ImportValue PublicSubnet1IpRange
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      - CidrIp: !ImportValue PublicSubnet2IpRange
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      - CidrIp: !ImportValue PrivateSubnet1IpRange
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      - CidrIp: !ImportValue PrivateSubnet2IpRange
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
  APIProd:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: ami-922914f7
      KeyName: !Ref KeyName
      Monitoring: false
      SubnetId: !ImportValue PrivateSubnet1ID
      IamInstanceProfile: S3-Admin-Access
      SecurityGroupIds:
        - !Ref AIProdASG
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  ELBApiProd:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      SecurityGroups:
        - !Ref AWSEBLoadBalancerSecurityGroup
      CrossZone: true
      Instances:
      - Ref: APIProd
      Subnets:
        - !ImportValue PublicSubnet2
        - !ImportValue PublicSubnet1
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      HealthCheck:
        Target:
          Fn::Join:
          - ''
          - - 'HTTP:'
            - !Ref InstancePort
            - "/"
        UnhealthyThreshold: '5'
        Timeout: '5'
        HealthyThreshold: '3'
        Interval: '10'
  AWSEBLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Load Balancer Security Group
      VpcId: !ImportValue ProductionVPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: '80'
          ToPort: '80'
          IpProtocol: tcp
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: '80'
          ToPort: '80'
          IpProtocol: tcp
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS Instance Security Group
      VpcId: !ImportValue ProductionVPC
      SecurityGroupIngress:
        - CidrIp: !ImportValue PrivateSubnet2IpRange
          FromPort: '3306'
          ToPort: '3306'
          IpProtocol: tcp
        - CidrIp: !ImportValue PrivateSubnet1IpRange
          FromPort: '3306'
          ToPort: '3306'
          IpProtocol: tcp
        - CidrIp: !ImportValue PublicSubnet2IpRange
          FromPort: '3306'
          ToPort: '3306'
          IpProtocol: tcp
        - CidrIp: !ImportValue PublicSubnet1IpRange
          FromPort: '3306'
          ToPort: '3306'
          IpProtocol: tcp

Outputs:
  EC2Instance:
    Description: A reference to the created EC2-instance
    Value: !Ref APIProd
  SecurityGroup:
    Description: A reference to the created Security Group
    Value: !Ref RDSSecurityGroup
    Export:
      Name: DBSSecurityGroup






